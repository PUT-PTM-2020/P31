#ifndef display_header
#define display_header


#include "stm32f4xx_hal.h"
#include "spi.h"
#include "gpio.h"

enum display_direction {horizontal, vertical};

struct display_config
{
    SPI_HandleTypeDef * spi;
    GPIO_TypeDef * reset_port;  uint16_t reset_pin;
    GPIO_TypeDef * bl_port;     uint16_t bl_pin;
    GPIO_TypeDef * dc_port;     uint16_t ce_pin;
    GPIO_TypeDef * ce_port;     uint16_t dc_pin;
    char buffer[6][14];
};

static const uint8_t display_font[][5] =
{
    { 0x00, 0x00, 0x00, 0x00, 0x00 },
    { 0x00, 0x00, 0x5f, 0x00, 0x00 },
    { 0x00, 0x07, 0x00, 0x07, 0x00 },
    { 0x14, 0x7f, 0x14, 0x7f, 0x14 },
    { 0x24, 0x2a, 0x7f, 0x2a, 0x12 },
    { 0x23, 0x13, 0x08, 0x64, 0x62 },
    { 0x36, 0x49, 0x55, 0x22, 0x50 },
    { 0x00, 0x05, 0x03, 0x00, 0x00 },
    { 0x00, 0x1c, 0x22, 0x41, 0x00 },
    { 0x00, 0x41, 0x22, 0x1c, 0x00 },
    { 0x14, 0x08, 0x3e, 0x08, 0x14 },
    { 0x08, 0x08, 0x3e, 0x08, 0x08 },
    { 0x00, 0x50, 0x30, 0x00, 0x00 },
    { 0x08, 0x08, 0x08, 0x08, 0x08 },
    { 0x00, 0x60, 0x60, 0x00, 0x00 },
    { 0x20, 0x10, 0x08, 0x04, 0x02 },
    { 0x3e, 0x51, 0x49, 0x45, 0x3e },
    { 0x00, 0x42, 0x7f, 0x40, 0x00 },
    { 0x42, 0x61, 0x51, 0x49, 0x46 },
    { 0x21, 0x41, 0x45, 0x4b, 0x31 },
    { 0x18, 0x14, 0x12, 0x7f, 0x10 },
    { 0x27, 0x45, 0x45, 0x45, 0x39 },
    { 0x3c, 0x4a, 0x49, 0x49, 0x30 },
    { 0x01, 0x71, 0x09, 0x05, 0x03 },
    { 0x36, 0x49, 0x49, 0x49, 0x36 },
    { 0x06, 0x49, 0x49, 0x29, 0x1e },
    { 0x00, 0x36, 0x36, 0x00, 0x00 },
    { 0x00, 0x56, 0x36, 0x00, 0x00 },
    { 0x08, 0x14, 0x22, 0x41, 0x00 },
    { 0x14, 0x14, 0x14, 0x14, 0x14 },
    { 0x00, 0x41, 0x22, 0x14, 0x08 },
    { 0x02, 0x01, 0x51, 0x09, 0x06 },
    { 0x32, 0x49, 0x79, 0x41, 0x3e },
    { 0x7e, 0x11, 0x11, 0x11, 0x7e },
    { 0x7f, 0x49, 0x49, 0x49, 0x36 },
    { 0x3e, 0x41, 0x41, 0x41, 0x22 },
    { 0x7f, 0x41, 0x41, 0x22, 0x1c },
    { 0x7f, 0x49, 0x49, 0x49, 0x41 },
    { 0x7f, 0x09, 0x09, 0x09, 0x01 },
    { 0x3e, 0x41, 0x49, 0x49, 0x7a },
    { 0x7f, 0x08, 0x08, 0x08, 0x7f },
    { 0x00, 0x41, 0x7f, 0x41, 0x00 },
    { 0x20, 0x40, 0x41, 0x3f, 0x01 },
    { 0x7f, 0x08, 0x14, 0x22, 0x41 },
    { 0x7f, 0x40, 0x40, 0x40, 0x40 },
    { 0x7f, 0x02, 0x0c, 0x02, 0x7f },
    { 0x7f, 0x04, 0x08, 0x10, 0x7f },
    { 0x3e, 0x41, 0x41, 0x41, 0x3e },
    { 0x7f, 0x09, 0x09, 0x09, 0x06 },
    { 0x3e, 0x41, 0x51, 0x21, 0x5e },
    { 0x7f, 0x09, 0x19, 0x29, 0x46 },
    { 0x46, 0x49, 0x49, 0x49, 0x31 },
    { 0x01, 0x01, 0x7f, 0x01, 0x01 },
    { 0x3f, 0x40, 0x40, 0x40, 0x3f },
    { 0x1f, 0x20, 0x40, 0x20, 0x1f },
    { 0x3f, 0x40, 0x38, 0x40, 0x3f },
    { 0x63, 0x14, 0x08, 0x14, 0x63 },
    { 0x07, 0x08, 0x70, 0x08, 0x07 },
    { 0x61, 0x51, 0x49, 0x45, 0x43 },
    { 0x00, 0x7f, 0x41, 0x41, 0x00 },
    { 0x02, 0x04, 0x08, 0x10, 0x20 },
    { 0x00, 0x41, 0x41, 0x7f, 0x00 },
    { 0x04, 0x02, 0x01, 0x02, 0x04 },
    { 0x40, 0x40, 0x40, 0x40, 0x40 },
    { 0x00, 0x01, 0x02, 0x04, 0x00 },
    { 0x20, 0x54, 0x54, 0x54, 0x78 },
    { 0x7f, 0x48, 0x44, 0x44, 0x38 },
    { 0x38, 0x44, 0x44, 0x44, 0x20 },
    { 0x38, 0x44, 0x44, 0x48, 0x7f },
    { 0x38, 0x54, 0x54, 0x54, 0x18 },
    { 0x08, 0x7e, 0x09, 0x01, 0x02 },
    { 0x0c, 0x52, 0x52, 0x52, 0x3e },
    { 0x7f, 0x08, 0x04, 0x04, 0x78 },
    { 0x00, 0x44, 0x7d, 0x40, 0x00 },
    { 0x20, 0x40, 0x44, 0x3d, 0x00 },
    { 0x7f, 0x10, 0x28, 0x44, 0x00 },
    { 0x00, 0x41, 0x7f, 0x40, 0x00 },
    { 0x7c, 0x04, 0x18, 0x04, 0x78 },
    { 0x7c, 0x08, 0x04, 0x04, 0x78 },
    { 0x38, 0x44, 0x44, 0x44, 0x38 },
    { 0x7c, 0x14, 0x14, 0x14, 0x08 },
    { 0x08, 0x14, 0x14, 0x18, 0x7c },
    { 0x7c, 0x08, 0x04, 0x04, 0x08 },
    { 0x48, 0x54, 0x54, 0x54, 0x20 },
    { 0x04, 0x3f, 0x44, 0x40, 0x20 },
    { 0x3c, 0x40, 0x40, 0x20, 0x7c },
    { 0x1c, 0x20, 0x40, 0x20, 0x1c },
    { 0x3c, 0x40, 0x30, 0x40, 0x3c },
    { 0x44, 0x28, 0x10, 0x28, 0x44 },
    { 0x0c, 0x50, 0x50, 0x50, 0x3c },
    { 0x44, 0x64, 0x54, 0x4c, 0x44 },
    { 0x00, 0x08, 0x36, 0x41, 0x00 },
    { 0x00, 0x00, 0x7f, 0x00, 0x00 },
    { 0x00, 0x41, 0x36, 0x08, 0x00 },
    { 0x10, 0x08, 0x08, 0x10, 0x08 },
    { 0x78, 0x46, 0x41, 0x46, 0x78 }
};

void display_setup(struct display_config * cfg);
void display_set_dxy(struct display_config * cfg,
                     enum display_direction direction,
                     uint8_t column, uint8_t row);
void display_write_cmd(struct display_config * cfg, uint8_t cmd);
void display_write_data(struct display_config * cfg, uint8_t data);

void display_write_char(struct display_config * cfg, char chr);
void display_rewrite_buffer(struct display_config * cfg);
void display_clear_buffer(struct display_config * cfg);

#endif
